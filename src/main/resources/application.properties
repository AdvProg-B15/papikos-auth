spring.application.name=auth

# Server Configuration
server.port=8080

# ===================================================================
# DATABASE CONFIGURATION
# ===================================================================
# Choose and uncomment the appropriate section for your database
# Ensure you have the corresponding JDBC driver dependency in your pom.xml or build.gradle

# --- PostgreSQL Configuration ---
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/auth_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# --- JPA & Hibernate Configuration ---
spring.jpa.hibernate.ddl-auto=update # Options: none, validate, update, create, create-drop
spring.jpa.show-sql=true # Shows executed SQL queries in the logs
spring.jpa.properties.hibernate.format_sql=true # Formats the SQL shown in logs
spring.jpa.properties.hibernate.use_sql_comments=true # Adds comments to SQL for better understanding

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
logging.level.org.springframework.boot.docker.compose=DEBUG
logging.level.com.zaxxer.hikari=DEBUG # HikariCP connection pool logging
logging.level.org.hibernate.SQL=DEBUG # To see SQL statements
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE # To see SQL parameters

# ===================================================================
# JWT CONFIGURATION
# ===================================================================
# The JWT secret MUST be set via an environment variable for security.
# Example: export JWT_SECRET="your-very-secure-and-long-jwt-secret-for-hs512-at-least-64-bytes-long-example"
app.jwt-secret=${JWT_SECRET}
app.jwt-expiration-in-ms=86400000 # 24 hours

# ===================================================================
# ADMIN CONFIGURATION
# ===================================================================
# Admin credentials should ideally be set via environment variables.
# Example: export ADMIN_EMAIL="admin@yourapp.com"
# Example: export ADMIN_PASSWORD="a_very_strong_admin_password"
admin.email=${ADMIN_EMAIL:admin@example.com}
admin.password=${ADMIN_PASSWORD:defaultSecurePassword123!}
